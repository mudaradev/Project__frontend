{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hp\\\\Desktop\\\\New folder (2)\\\\src\\\\Card\\\\Card.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { QRCodeCanvas } from \"qrcode.react\";\n\n//backend link\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BASE_URL = \"http://localhost:5000/cards\";\nexport default function CardList() {\n  _s();\n  const [cards, setCards] = useState([]); // store backend ekn fetch krpu data  cards\n  const [isLoading, setIsLoading] = useState(true); //loading\n  const [error, setError] = useState(null); //errors if fetch fails\n\n  useEffect(() => {\n    //componenet eka update wela thiyenawanm meka run wenawa\n    const fetchCards = async () => {\n      //async dammama server eka load wenkal innwa\n      try {\n        const response = await fetch(BASE_URL); // get data from backend\n        if (!response.ok) throw new Error(\"Failed to fetch data\");\n        //true if response is ok=>error ekk awe nathi unama\n        const data = await response.json(); // convert to JavaScript\n        setCards(data); // stste eka update krnawa(data fetch unama ewa store krnwa)\n      } catch (err) {\n        setError(err.message); // save error message\n      } finally {\n        setIsLoading(false); // stop loading\n      }\n    };\n    fetchCards(); //dan define krpu ekata cal krnwa\n  }, []); // empty [] = run only once\n\n  // Show loading\n  if (isLoading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 25\n  }, this);\n\n  // Show error\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Error: \", error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 21\n  }, this);\n\n  // Show all cards\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: cards.map((card //loopeka(map krnwa) through cards array\n    ) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: card.image,\n        alt: card.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: card.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: card.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(QRCodeCanvas, {\n        value: `http://localhost:3000/card/${card.id}`,\n        size: 100\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this)]\n    }, card.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n\n// const cards = [\n//   {\n//     id: 1,\n//     title: \"My First Card\",\n//     description: \"This is the description of the first card.\",\n//     image: \"https://picsum.photos/id/101/200/150\"\n//   },\n//   {\n//     id: 2,\n//     title: \"My Second Card\",\n//     description: \"This is the description of the second card.\",\n//     image: \"https://picsum.photos/id/102/200/150\"\n//   },\n//   {\n//     id: 3,\n//     title: \"My Third Card\",\n//     description: \"This is the description of the third card.\",\n//     image: \"https://picsum.photos/id/103/200/150\"\n//   }\n// ];\n//backend ek me wage ekkenna ona\n_s(CardList, \"O9KvvJOARjnA46rEl6ut/SsfFvo=\");\n_c = CardList;\nvar _c;\n$RefreshReg$(_c, \"CardList\");","map":{"version":3,"names":["React","useEffect","useState","QRCodeCanvas","jsxDEV","_jsxDEV","BASE_URL","CardList","_s","cards","setCards","isLoading","setIsLoading","error","setError","fetchCards","response","fetch","ok","Error","data","json","err","message","children","fileName","_jsxFileName","lineNumber","columnNumber","map","card","src","image","alt","title","description","value","id","size","_c","$RefreshReg$"],"sources":["C:/Users/Hp/Desktop/New folder (2)/src/Card/Card.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { QRCodeCanvas } from \"qrcode.react\";\r\n\r\n//backend link\r\nconst BASE_URL = \"http://localhost:5000/cards\";\r\n\r\nexport default function CardList() {\r\n  const [cards, setCards] = useState([]); // store backend ekn fetch krpu data  cards\r\n  const [isLoading, setIsLoading] = useState(true); //loading\r\n  const [error, setError] = useState(null); //errors if fetch fails\r\n\r\n  useEffect(() => {\r\n    //componenet eka update wela thiyenawanm meka run wenawa\r\n    const fetchCards = async () => {\r\n      //async dammama server eka load wenkal innwa\r\n      try {\r\n        const response = await fetch(BASE_URL); // get data from backend\r\n        if (!response.ok) throw new Error(\"Failed to fetch data\");\r\n        //true if response is ok=>error ekk awe nathi unama\r\n        const data = await response.json(); // convert to JavaScript\r\n        setCards(data); // stste eka update krnawa(data fetch unama ewa store krnwa)\r\n      } catch (err) {\r\n        setError(err.message); // save error message\r\n      } finally {\r\n        setIsLoading(false); // stop loading\r\n      }\r\n    };\r\n\r\n    fetchCards(); //dan define krpu ekata cal krnwa\r\n  }, []); // empty [] = run only once\r\n\r\n  // Show loading\r\n  if (isLoading) return <div>Loading...</div>;\r\n\r\n  // Show error\r\n  if (error) return <div>Error: {error}</div>;\r\n\r\n  // Show all cards\r\n  return (\r\n    <div>\r\n      {cards.map(\r\n        (\r\n          card //loopeka(map krnwa) through cards array\r\n        ) => (\r\n          <div key={card.id}>\r\n            <img src={card.image} alt={card.title} />\r\n            <h2>{card.title}</h2>\r\n            <p>{card.description}</p>\r\n            <QRCodeCanvas\r\n              value={`http://localhost:3000/card/${card.id}`}\r\n              size={100}\r\n            />\r\n          </div>\r\n        )\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\n// const cards = [\r\n//   {\r\n//     id: 1,\r\n//     title: \"My First Card\",\r\n//     description: \"This is the description of the first card.\",\r\n//     image: \"https://picsum.photos/id/101/200/150\"\r\n//   },\r\n//   {\r\n//     id: 2,\r\n//     title: \"My Second Card\",\r\n//     description: \"This is the description of the second card.\",\r\n//     image: \"https://picsum.photos/id/102/200/150\"\r\n//   },\r\n//   {\r\n//     id: 3,\r\n//     title: \"My Third Card\",\r\n//     description: \"This is the description of the third card.\",\r\n//     image: \"https://picsum.photos/id/103/200/150\"\r\n//   }\r\n// ];\r\n//backend ek me wage ekkenna ona\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}